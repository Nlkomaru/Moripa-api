openapi: '3.0.2'
info:
  title: "MineAuth"
  description: |
    This is the MineAuth API documentation.<br>
    This makes user access to self information on minecraft.
  license:
    name: CC0-1.0
    url: "https://creativecommons.org/publicdomain/zero/1.0/"
  version: "1.0.0"

servers:
  - url: "http://localhost:8080"
    description: "Local server"
  - url: "https://api.example.com"
    description: "Production server"

components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/authorize
          tokenUrl: /oauth2/token
          refreshUrl: /oauth2/token
          scopes:
            openid: Grants read access for OpenID Connect
            profile: Grants read access for my profile
            all: Grants read access for my resources

paths:
  /oauth2/userinfo:
    get:
      summary: Get user information
      tags:
        - oauth2
      security:
        - oauth2: [ profile ]
      responses:
        default:
          description: Error
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "069a79f4-44e9-4726-a5be-fca90e38aaf5"
                    description: The user UUID
                  username:
                    type: string
                    example: "Notch"
                    description: The user name
  /oauth2/revoke:
    post:
      responses:
        '200':
          description: OK
      summary: Revoke access token
      tags:
        - oauth2
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
  /oauth2/introspect:
    post:
      responses:
        '200':
          description: OK
      summary: Introspect access token
      tags:
        - oauth2
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
  /api/v1/commons/server/players:
    get:
      summary: Get online players
      tags:
        - Server
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "069a79f4-44e9-4726-a5be-fca90e38aaf5"
                      description: The player UUID
                    name:
                      type: string
                      example: "Notch"
                      description: The player name
  /api/v1/plugins/availableIntegrations:
    get:
      summary: Get available integrators
      tags:
        - Plugins
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                example: ["Vault", "LuckPerms"]
                items:
                  type: string
  /api/v1/plugins/vault/balance/me:
    get:
      summary: Get my balance
      tags:
        - Vault
      security:
        - oauth2: [ all ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    example: 1000
  /api/v1/plugins/vault/send:
    post:
      summary: Send money
      tags:
        - Vault
      security:
        - oauth2: [ all ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
                  example: "069a79f4-44e9-4726-a5be-fca90e38aaf5"
                  description: The target UUID
                amount:
                  type: number
                  example: 250
                  description: The amount
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: Successfully sent 250 to Notch. Your balance is 750"
        '400':
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
                example: "Not enough money"
  /api/v1/plugins/quickshop-hikari/shops/me:
    get:
      summary: Get my shops
      tags:
        - QuickShop
      security:
        - oauth2: [ all ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "069a79f4-44e9-4726-a5be-fca90e38aaf5"
                      description: The shop UUID

